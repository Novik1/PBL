# See PyCharm help at https://www.jetbrains.com/help/pycharm/
import cv2
import imutils
import easyocr
import numpy as np


reader = easyocr.Reader(['en'])


def parseNumber(plateNumber):
    import re

    if plateNumber == "":
        plateNumber = 'NOT REC'

    incorrect_chars = ["TOYOTA", "KIA", "BMW", "_", ":", ",", "MD", "#", "~", ".", "@", "(", ")", "[", "", '-',
                       "callmed", "www", "CALLMED", "md"]
    for z in incorrect_chars:
        plateNumber = plateNumber.replace(z, "")
    regex = "[a-z]"
    plateNumber = re.sub(regex, "", plateNumber)

    if len(plateNumber.replace("  ", "").replace(" ", "")) == 6:
        f_p = "".join(plateNumber)[:3]
        s_p = "".join(plateNumber)[3:]

        plateNumber = str(f_p) + str(s_p)
        plateNumber = plateNumber.replace("  ", " ")
    if plateNumber[0] == " ":
        plateNumber = plateNumber[1:]

    if (len(plateNumber.split(" ")) == 2 and len(plateNumber.split(" ")[0]) == 4):
        f_p = plateNumber.split(" ")[0][:3]
        s_p = plateNumber.split(" ")[1]

        plateNumber = f_p + " " + s_p

    if len("".join(plateNumber.split(" "))) == 6:
        f_p = "".join(plateNumber.split(" "))[:3]
        s_p = "".join(plateNumber.split(" "))[3:]

        plateNumber = f_p + " " + s_p

    if (len("".join(plateNumber.split(" "))) == 7 and "".join(plateNumber.split(" "))[4].isdigit() == True):
        f_p = "".join(plateNumber.split(" "))[:3]
        s_p = "".join(plateNumber.split(" "))[4:]

        plateNumber = f_p + " " + s_p

    return plateNumber

path = "/Users/novik/Downloads/CarPlatesupdatedV2"
import os
def read_text_file(file_path):
    with open(file_path, 'r') as f:
        file = f.read()
os.chdir(path)

def PlateNumberRecognition(image_name,reader):

    image = cv2.imread(image_name)
    image = imutils.resize(image, width=300)

    gray_image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
    gray_image = cv2.bilateralFilter(gray_image, 11, 17, 17)

    edged = cv2.Canny(gray_image, 30, 200)


    cnts,new = cv2.findContours(edged.copy(), cv2.RETR_LIST, cv2.CHAIN_APPROX_SIMPLE)
    image1=image.copy()
    cv2.drawContours(image1,cnts,-1,(0,255,0),3)

    cnts = sorted(cnts, key = cv2.contourArea, reverse = True)[:110]
    screenCnt = None
    image2 = image.copy()
    cv2.drawContours(image2,cnts,-1,(0,255,0),3)

    i = 7
    for c in cnts:
        perimeter = cv2.arcLength(c, True)
        approx = cv2.approxPolyDP(c, 0.018 * perimeter, True)
        if len(approx) == 4:
            screenCnt = approx
            x, y, w, h = cv2.boundingRect(c)
            new_img = image[y:y + h, x:x + w]
            cv2.imwrite('./' + str(i) + '.png', new_img)
            i += 1
            break

    cv2.drawContours(image, [screenCnt], -1, (0, 255, 0), 3)

    cv2.imshow("image with detected license plate", image)
    #cv2.waitKey(0)

    result = reader.readtext(image)
    result = " ".join([x[1] for x in result])

    return parseNumber(result)


image_name = "image58.jpeg"
#photo_2022-06-22 18.08.14.jpeg,image2.jpeg,image80.jpeg
print(PlateNumberRecognition(image_name,reader))

All_ImagesofCarPlate = []

for file in os.listdir():
    All_ImagesofCarPlate.append(file)

result_error = []
result = []
for image_name in All_ImagesofCarPlate:
    try:
        print(image_name)
        PlateNumberRecognition(image_name,reader)
    except:
        result_error.append(["NOT REC",image_name])
        pass
print(PlateNumberRecognition("image76.jpeg",reader))
print(image_name)
print(result_error)
